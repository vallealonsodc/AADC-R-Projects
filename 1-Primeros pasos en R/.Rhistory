Bibliografía consultada: [https://rpubs.com/Edimer/754932](https://rpubs.com/Edimer/754932)
Bibliografia consultada: [https://rpubs.com/Edimer/754932](https://rpubs.com/Edimer/754932)
**A. Construya un vector, muéstrelo, nombre cada componente con un nombre o etiqueta,muestre un valor en concreto, realice la suma de todos sus valores en caso de ser un vector numérico, etc.**
**A. Construya un vector, muéstrelo, nombre cada componente con un nombre o etiqueta,muestre un valor en concreto, realice la suma de todos sus valores en caso de ser un vector numérico, etc.**
En primer lugar vamos a construir el vector, nombrar cada componente y mostrarlo.
#Construcción del vector de etiquetas
etiquetas <- c("A","B","C","D","E")
#Asociación de valores y etiquetas
vec <- setNames(valores, etiquetas)
print(vec)
#Construcción del vector de valores
valores <- c(4,5,3,2,1)
#Construcción del vector de etiquetas
etiquetas <- c("A","B","C","D","E")
#Asociación de valores y etiquetas
vec <- setNames(valores, etiquetas)
print(vec)
#Construcción del vector de valores
valores <- c(4,5,3,2,1)
#Construcción del vector de etiquetas
etiquetas <- c("A","B","C","D","E")
#Asociación de valores y etiquetas
vec <- setNames(valores, etiquetas)
print(vec)
#Mostrar un valor concreto
vec[1] # Mostrar elemento según su posición
vec["D"] #<- Mostrar elemento según su etiqueta
#Suma de los valores del vector
sum(vec)
#Construcción de la matriz
matriz_ejemplo <- matrix(c(1,2,3,4,5,6,7,8,9))
print(matriz_ejemplo)
#Construcción de la matriz
matriz_columnas <- matrix(c(1,2,3,4,5,6,7,8,9),
nrow = 3, ncol = 3)
print(matriz_columnas)
matriz_filas <- matrix(c(1,2,3,4,5,6,7,8,9),
nrow = 3, ncol = 3, byrow=TRUE)
print(matriz_filas)
#Definir los vectores
pacientes <- c("Juan", "Ana", "Pedro", "Maria")
anyo_nacimiento <- c(2000, 1998, 1999, 1995)
fumador <- c(TRUE, TRUE, FALSE, FALSE)
#Construir el data frame
df <- data.frame(Pacientes = pacientes, Anyo_nacimiento = anyo_nacimiento,
Fumador = fumador)
print(df)
#Estudio de estructura del df
str(df)
head(df)
#Definir los vectores aumentando el número de valores
pacientes <- c("Juan", "Ana", "Pedro", "Maria",
"Juan", "Ana", "Pedro", "Maria",
"Juan", "Ana", "Pedro", "Maria",
"Juan", "Ana", "Pedro", "Maria",
"Juan", "Ana", "Pedro", "Maria",
"Juan", "Ana", "Pedro", "Maria",
"Juan", "Ana", "Pedro", "Maria",
"Juan", "Ana", "Pedro", "Maria")
anyo_nacimiento <- c(2000, 1998, 1999, 1995,
2000, 1998, 1999, 1995,
2000, 1998, 1999, 1995,
2000, 1998, 1999, 1995,
2000, 1998, 1999, 1995,
2000, 1998, 1999, 1995,
2000, 1998, 1999, 1995,
2000, 1998, 1999, 1995)
fumador <- c(TRUE, TRUE, FALSE, FALSE,
TRUE, TRUE, FALSE, FALSE,
TRUE, TRUE, FALSE, FALSE,
TRUE, TRUE, FALSE, FALSE,
TRUE, TRUE, FALSE, FALSE,
TRUE, TRUE, FALSE, FALSE,
TRUE, TRUE, FALSE, FALSE,
TRUE, TRUE, FALSE, FALSE)
#Construir el data frame
df_aumento <- data.frame(Pacientes = pacientes,
Anyo_nacimiento = anyo_nacimiento,
Fumador = fumador)
#Mostrar estructura
str(df_aumento)
head(df_aumento)
#Mostrar valor concreto según fila y columna
valor <- df[3, "Pacientes"]
print(valor)
#Mostrar el conjunto de valores de una fila concreta
fila <- df[3,]
print(fila)
#Mostrar el conjunto de valores de una columna concreta
columna <- df[,"Fumador"]
print(columna)
#Mostrar el conjunto de valores de una columna concreta
columna <- df$Fumador
print(columna)
#Construcción de los elementos que contendrá la lista
vector <- c(6,5,4,3,2,1)
matriz <- matrix(1:6,
nrow = 2, ncol = 3)
df <- data.frame(M=c("A","B","C","D","E","F"), m=c("a","b","c","d","e","f"))
lista <- list(vector, matriz, df)
print(lista)
#Acceder a los elementos según su posición
ej <- lista[2]
typeof(ej)
ej <- lista[[2]]
typeof(ej)
#Dentro del elemento vector de la lista, accede a un subelemento según su índice.
lista[[1]][2]
#Dentro del elemento matriz de la lista, accede a un subelemento según las coordenadas
#Coordenadas de una posición concreta
lista[[2]][2,3]
#Devuelve una columna completa de la matriz
lista[[2]][,2]
#Dentro del elemento dataframe de la lista, accede a un subelemento según las etiquetas
lista[[3]]["m"]
lista[[3]]$m
?read.table
?read.delim
?read.csv()
df<-read.csv("datos1_prueba.csv")
df
df2<-read.csv("datos1_prueba.csv",stringsAsFactors = FALSE)
df2
df<-read.csv("weather.csv")
head(df)
#typeof(df[1,"X2"])
df2<-read.csv("weather.csv", stringsAsFactors = FALSE)
head(df2)
#typeof(df[1,"X2"])
library(tidyr)
#Información de R sobre la función
?gather
df_aux<-gather(df,   #dataframe sobre el que se va a trabajar
time, #nuevo atributo que contiene la clave
val,  #nuevo atributo que contiene el valor
X1:X3 #selecciona las columnas que se van a juntar
)
df_aux[, c(1:5, 33:34)] #para mostrar solo las primeras y últimas columnas del df
#que son las que se han modificado
df_aux2<-spread(df_aux, #dataframe sobre el que se va a trabajar
time,   #atributo cuyas claves se convertirán en columnas
val     #atributo cuyos valores se distribuiran en las claves
)
df_aux2
mayor_valor <- function(a,b){
c = 0
if(a>b)
c = a
else if(b>a)
c = b
else
c = c(a,b)
return c
mayor_valor <- function(a,b){
c = 0
if(a>b)
c = a
else if(b>a)
c = b
else
c
return c
mayor_valor <- function(a,b){
c = 0
if(a>b)
c = a
else if(b>a)
c = b
else
c = c(a,b)
return(c)
}
mayor_valor <- function(a,b){
if(a>b)
c = a
else if(b>a)
c = b
else
c = c(a,b)
return(c)
}
mayor_valor <- function(a,b){
if(a>b)
c = a
else if(b>a)
c = b
else
c = c(a,b)
return(c)
}
mayor_valor(8,3)
mayor_valor <- function(a,b){
if(a>b)
c = a
else
c = b
return(c)
}
mayor_valor(8,3)
mayor_valor(4,5)
imprime_diez <- function(n){
for(i in 1:10){
return(print(n))
}
}
imprime_diez <- function(n){
for(i in 1:10){
return(print(n))
}
}
imprime_diez("Hola, mundo")
imprime_diez <- function(n){
for(i in 1:10){
print(n)
}
}
imprime_diez("Hola, mundo")
imprime_while <- function(n){
i <- 1
while(i<10){
print(n)
}
i <- i + 1
}
imprime_while("Hola, mundo")
imprime_while <- function(n){
i <- 1
while(i<10){
print(n)
i <- i + 1
}
}
imprime_while("Hola, mundo")
sume_diez <- function(a, b=10){
return(a+b)
}
sume <- function(a, b=10){
return(a+b)
}
sume(1,2)
sume(1)
mayor_tres <- function(a,b,c){
d <- a
if(b>a)
d <- b
else if(c>a)
d <- c
return(d)
}
mayor_tres <- function(a,b,c){
d <- a
if(b>a)
d <- b
else if(c>a)
d <- c
return(d)
}
mayor_tres(1,2,3)
mayor_tres <- function(a,b,c){
d <- a
if(b>d)
d <- b
else if(c>d)
d <- c
return(d)
}
mayor_tres(1,2,3)
mayor_tres <- function(a,b,c){
d <- a
if(b>d)
d <- b
if(c>d)
d <- c
return(d)
}
mayor_tres(1,2,3)
mayor_tres <- function(a,b,c){
d <- a
if(b>d)
d <- b
if(c>d)
d <- c
return(d)
}
mayor_tres(1,2,3)
mayor_tres <- function(a,b,c){
d <- a
if(b>d)
d <- b
if(c>d)
d <- c
return(d)
}
mayor_tres(1,5,3)
mayor_tres <- function(a,b,c){
d <- a
if(b>d)
d <- b
if(c>d)
d <- c
return(d)
}
mayor_tres(7,5,3)
mayor_tres(1,5,3)
mayor_tres <- function(a,b,c){
d <- a
if(b>d)
d <- b
if(c>d)
d <- c
return(d)
}
mayor_tres(7,5,3)
mayor_tres(1,5,3)
mayor_tres(1,5,7)
pares <- function(list){
res <- list()
for(i in list){
res <- add(i)
}
}
pares <- function(list){
res <- list()
for(i in list){
res <- add(i)
}
return(res)
}
pares([1,2,3,4])
pares <- function(list){
res <- list()
for(i in list){
res <- add(i)
}
return(res)
}
lista = [1,2,3,4]
pares <- function(list){
res <- list()
for(i in list){
res <- add(i)
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(list){
res <- list()
for(i in list){
append(res, i)
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- list()
for(i in ls){
append(res, i)
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- list()
for(i in ls){
append(res, i)
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- list()
for(i in ls){
res <- append(res, i)
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- list()
for(i in ls){
res <- append(i)
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- list()
for(i in ls){
res <- append(res, i)
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- c()
for(i in ls){
res <- c(res, i)
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- c()
for(i in ls){
if(i%2==0)
pares <- function(ls){
res <- c()
for(i in ls){
if(i%2=0)
pares <- function(ls){
res <- c()
for(i in ls){
if(i%%2==0)
res <- c(res, i)
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- 0
for(i in ls){
if(i%%2==0)
res <- res + i
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- 0
for(i in ls){
if(i%%2==0)
if(i>res)
res <- i
}
return(res)
}
lista = list(1,2,3,4)
pares(lista)
pares <- function(ls){
res <- 0
for(i in ls){
if(i%%2==0)
if(i>res)
res <- i
}
return(res)
}
lista = list(1,6,3,4)
pares(lista)
find <- function(ls, val){
for(i in ls)
if(i == val)
return (val)
}
lista = list(1,6,3,4)
find(lista, 6)
find <- function(ls, val){
res <- FALSE
for(i in ls)
if(i == val)
res <- TRUE
return(res)
}
lista = list(1,6,3,4)
find(lista, 6)
find <- function(ls, val){
res <- FALSE
for(i in ls)
if(i == val)
res <- TRUE
return(res)
}
lista = list(1,6,3,4)
find(lista, 6)
find(lista, 5)
